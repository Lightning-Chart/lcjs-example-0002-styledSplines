(self.webpackChunk=self.webpackChunk||[]).push([[524],{44:(e,t,a)=>{const s=a(377),r=a(613),{lightningChart:n,AxisTickStrategies:i,AxisScrollStrategies:o,PointShape:l,SolidFill:c,ColorHEX:p,Themes:m}=s,{createProgressiveRandomGenerator:d}=r,g=new Date,h=g.getTime(),S=n({resourcesBaseUrl:new URL(document.head.baseURI).origin+new URL(document.head.baseURI).pathname+"resources/"}).ChartXY({legend:{visible:!1},theme:m[new URLSearchParams(window.location.search).get("theme")||"darkGold"]||void 0});S.setTitle("Live power consumption").getDefaultAxisX().setTickStrategy(i.DateTime,e=>e.setDateOrigin(g)).setDefaultInterval(e=>({end:e.dataMax,start:(e.dataMax??0)-61e3,stopAxisAfter:!1})).setScrollStrategy(o.scrolling),S.axisY.setTitle("Power consumption").setUnits("kW").setInterval({start:0,end:500,stopAxisAfter:!1}).setScrollStrategy(o.expansion);const u=S.addPointLineAreaSeries({schema:{x:{pattern:"progressive"},y:{pattern:null}}}).setCurvePreprocessing({type:"spline"}).setName("Power consumption");d().setNumberOfPoints(1e4).generate().setStreamBatchSize(1).setStreamInterval(1e3).setStreamRepeat(!0).toStream().forEach(e=>{e.x=Date.now()-h,e.y=2e3*e.y,u.appendSample(e)})},216:()=>{}},e=>{e.O(0,[502],()=>e(e.s=44)),e.O()}]);